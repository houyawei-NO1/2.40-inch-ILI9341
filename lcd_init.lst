C251 COMPILER V5.60.0,  lcd_init                                                           29/11/24  13:55:54  PAGE 1   


C251 COMPILER V5.60.0, COMPILATION OF MODULE lcd_init
OBJECT MODULE PLACED IN lcd_init.obj
COMPILER INVOKED BY: D:\Keil_v5\C251\BIN\C251.EXE SRC\LCD\lcd_init.c XSMALL INTR2 BROWSE INCDIR(.\SRC\LCD) DEBUG PRINT(.
                    -\lcd_init.lst) OBJECT(lcd_init.obj) 

stmt  level    source

    1          #include "lcd_init.h"
    2          
    3          //不准确延时函数
    4          void delay_ms(unsigned int ms)
    5          {                         
    6   1               unsigned int i;
    7   1          do{
    8   2                i = MAIN_Fosc / 6000;
    9   2                while(--i);
   10   2           }while(--ms);
   11   1      }
   12          
   13          
   14          /******************************************************************************
   15                函数说明：LCD串行数据写入函数
   16                入口数据：dat  要写入的串行数据
   17                返回值：  无
   18          ******************************************************************************/
   19          void LCD_Writ_Bus(u8 dat) 
   20          {       
   21   1              u8 i;
   22   1              LCD_CS_Clr();
   23   1              for(i=0;i<8;i++)
   24   1              {                         
   25   2                      LCD_SCLK_Clr();
   26   2                      if(dat&0x80)
   27   2                      {
   28   3                         LCD_MOSI_Set();
   29   3                      }
   30   2                      else
   31   2                      {
   32   3                         LCD_MOSI_Clr();
   33   3                      }
   34   2                      LCD_SCLK_Set();
   35   2                      dat<<=1;
   36   2              }       
   37   1        LCD_CS_Set(); 
   38   1      }
   39          
   40          
   41          /******************************************************************************
   42                函数说明：LCD写入数据
   43                入口数据：dat 写入的数据
   44                返回值：  无
   45          ******************************************************************************/
   46          void LCD_WR_DATA8(u8 dat)
   47          {
   48   1              LCD_Writ_Bus(dat);
   49   1      }
   50          
   51          
   52          /******************************************************************************
   53                函数说明：LCD写入数据
   54                入口数据：dat 写入的数据
   55                返回值：  无
   56          ******************************************************************************/
   57          void LCD_WR_DATA(u16 dat)
   58          {
C251 COMPILER V5.60.0,  lcd_init                                                           29/11/24  13:55:54  PAGE 2   

   59   1              LCD_Writ_Bus(dat>>8);
*** WARNING C188 IN LINE 59 OF SRC\LCD\lcd_init.c: 'parameter 1': value truncated
   60   1              LCD_Writ_Bus(dat);
*** WARNING C188 IN LINE 60 OF SRC\LCD\lcd_init.c: 'parameter 1': value truncated
   61   1      }
   62          
   63          
   64          /******************************************************************************
   65                函数说明：LCD写入命令
   66                入口数据：dat 写入的命令
   67                返回值：  无
   68          ******************************************************************************/
   69          void LCD_WR_REG(u8 dat)
   70          {
   71   1              LCD_DC_Clr();//写命令
   72   1              LCD_Writ_Bus(dat);
   73   1              LCD_DC_Set();//写数据
   74   1      }
   75          
   76          
   77          /******************************************************************************
   78                函数说明：设置起始和结束地址
   79                入口数据：x1,x2 设置列的起始和结束地址
   80                          y1,y2 设置行的起始和结束地址
   81                返回值：  无
   82          ******************************************************************************/
   83          void LCD_Address_Set(u16 x1,u16 y1,u16 x2,u16 y2)
   84          {
   85   1                      LCD_WR_REG(0x2a);//列地址设置
   86   1                      LCD_WR_DATA(x1);
   87   1                      LCD_WR_DATA(x2);
   88   1                      LCD_WR_REG(0x2b);//行地址设置
   89   1                      LCD_WR_DATA(y1);
   90   1                      LCD_WR_DATA(y2);
   91   1                      LCD_WR_REG(0x2c);//储存器写
   92   1      }
   93          
   94          
   95          /******************************************************************************
   96                函数说明：LCD初始化函数
   97                入口数据：无
   98                返回值：  无
   99          ******************************************************************************/
  100          void Lcd_Init(void)
  101          {
  102   1              LCD_RES_Clr();
  103   1              delay_ms(100);
  104   1              LCD_RES_Set();
  105   1              delay_ms(100);
  106   1              LCD_BLK_Set();
  107   1              delay_ms(100);
  108   1              //************* Start Initial Sequence **********//
  109   1              LCD_WR_REG(0x11); //Sleep out 
  110   1              delay_ms(120);              //Delay 120ms 
  111   1              //************* Start Initial Sequence **********// 
  112   1              LCD_WR_REG(0xCF);
  113   1              LCD_WR_DATA8(0x00);
  114   1              LCD_WR_DATA8(0xC1);
  115   1              LCD_WR_DATA8(0X30);
  116   1              LCD_WR_REG(0xED);
  117   1              LCD_WR_DATA8(0x64);
  118   1              LCD_WR_DATA8(0x03);
  119   1              LCD_WR_DATA8(0X12);
  120   1              LCD_WR_DATA8(0X81);
  121   1              LCD_WR_REG(0xE8);
  122   1              LCD_WR_DATA8(0x85);
C251 COMPILER V5.60.0,  lcd_init                                                           29/11/24  13:55:54  PAGE 3   

  123   1              LCD_WR_DATA8(0x00);
  124   1              LCD_WR_DATA8(0x79);
  125   1              LCD_WR_REG(0xCB);
  126   1              LCD_WR_DATA8(0x39);
  127   1              LCD_WR_DATA8(0x2C);
  128   1              LCD_WR_DATA8(0x00);
  129   1              LCD_WR_DATA8(0x34);
  130   1              LCD_WR_DATA8(0x02);
  131   1              LCD_WR_REG(0xF7);
  132   1              LCD_WR_DATA8(0x20);
  133   1              LCD_WR_REG(0xEA);
  134   1              LCD_WR_DATA8(0x00);
  135   1              LCD_WR_DATA8(0x00);
  136   1              LCD_WR_REG(0xC0); //Power control
  137   1              LCD_WR_DATA8(0x1D); //VRH[5:0]
  138   1              LCD_WR_REG(0xC1); //Power control
  139   1              LCD_WR_DATA8(0x12); //SAP[2:0];BT[3:0]
  140   1              LCD_WR_REG(0xC5); //VCM control
  141   1              LCD_WR_DATA8(0x33);
  142   1              LCD_WR_DATA8(0x3F);
  143   1              LCD_WR_REG(0xC7); //VCM control
  144   1              LCD_WR_DATA8(0x92);
  145   1              LCD_WR_REG(0x3A); // Memory Access Control
  146   1              LCD_WR_DATA8(0x55);
  147   1              LCD_WR_REG(0x36); // Memory Access Control
  148   1              if(USE_HORIZONTAL==0)LCD_WR_DATA8(0x08);
  149   1              else if(USE_HORIZONTAL==1)LCD_WR_DATA8(0xC8);
  150   1              else if(USE_HORIZONTAL==2)LCD_WR_DATA8(0x78);
  151   1              else LCD_WR_DATA8(0xA8);
  152   1              LCD_WR_REG(0xB1);
  153   1              LCD_WR_DATA8(0x00);
  154   1              LCD_WR_DATA8(0x12);
  155   1              LCD_WR_REG(0xB6); // Display Function Control
  156   1              LCD_WR_DATA8(0x0A);
  157   1              LCD_WR_DATA8(0xA2);
  158   1      
  159   1              LCD_WR_REG(0x44);
  160   1              LCD_WR_DATA8(0x02);
  161   1      
  162   1              LCD_WR_REG(0xF2); // 3Gamma Function Disable
  163   1              LCD_WR_DATA8(0x00);
  164   1              LCD_WR_REG(0x26); //Gamma curve selected
  165   1              LCD_WR_DATA8(0x01);
  166   1              LCD_WR_REG(0xE0); //Set Gamma
  167   1              LCD_WR_DATA8(0x0F);
  168   1              LCD_WR_DATA8(0x22);
  169   1              LCD_WR_DATA8(0x1C);
  170   1              LCD_WR_DATA8(0x1B);
  171   1              LCD_WR_DATA8(0x08);
  172   1              LCD_WR_DATA8(0x0F);
  173   1              LCD_WR_DATA8(0x48);
  174   1              LCD_WR_DATA8(0xB8);
  175   1              LCD_WR_DATA8(0x34);
  176   1              LCD_WR_DATA8(0x05);
  177   1              LCD_WR_DATA8(0x0C);
  178   1              LCD_WR_DATA8(0x09);
  179   1              LCD_WR_DATA8(0x0F);
  180   1              LCD_WR_DATA8(0x07);
  181   1              LCD_WR_DATA8(0x00);
  182   1              LCD_WR_REG(0XE1); //Set Gamma
  183   1              LCD_WR_DATA8(0x00);
  184   1              LCD_WR_DATA8(0x23);
  185   1              LCD_WR_DATA8(0x24);
  186   1              LCD_WR_DATA8(0x07);
  187   1              LCD_WR_DATA8(0x10);
  188   1              LCD_WR_DATA8(0x07);
C251 COMPILER V5.60.0,  lcd_init                                                           29/11/24  13:55:54  PAGE 4   

  189   1              LCD_WR_DATA8(0x38);
  190   1              LCD_WR_DATA8(0x47);
  191   1              LCD_WR_DATA8(0x4B);
  192   1              LCD_WR_DATA8(0x0A);
  193   1              LCD_WR_DATA8(0x13);
  194   1              LCD_WR_DATA8(0x06);
  195   1              LCD_WR_DATA8(0x30);
  196   1              LCD_WR_DATA8(0x38);
  197   1              LCD_WR_DATA8(0x0F);
  198   1              LCD_WR_REG(0x29); //Display on
  199   1      } 
  200          
  201          
  202          
  203          
  204          
  205          
  206          
  207          


Module Information          Static   Overlayable
------------------------------------------------
  code size            =       574     ------
  ecode size           =    ------     ------
  data size            =    ------     ------
  idata size           =    ------     ------
  pdata size           =    ------     ------
  xdata size           =    ------     ------
  xdata-const size     =    ------     ------
  edata size           =    ------          4
  bit size             =    ------     ------
  ebit size            =    ------     ------
  bitaddressable size  =    ------     ------
  ebitaddressable size =    ------     ------
  far data size        =    ------     ------
  huge data size       =    ------     ------
  const size           =    ------     ------
  hconst size          =    ------     ------
End of Module Information.


C251 COMPILATION COMPLETE.  2 WARNING(S),  0 ERROR(S)
